{"ast":null,"code":"var _jsxFileName = \"/Users/wok3n/Desktop/React-Portfolio/src/components/Project.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/Project.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Project(_ref) {\n  _s();\n  let {\n    projects\n  } = _ref;\n  const {\n    projectId\n  } = useParams();\n  const project = projects.find(project => project.id === projectId);\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-links\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.deployedUrl,\n        children: \"View Deployed App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.githubUrl,\n        children: \"View GitHub Repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-screenshot\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: project.screenshot,\n        alt: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Project, \"e33EhjYInum2JA3DpcLGJahOhO4=\", false, function () {\n  return [useParams];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Project","_ref","_s","projects","projectId","project","find","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","href","deployedUrl","githubUrl","src","screenshot","alt","_c","$RefreshReg$"],"sources":["/Users/wok3n/Desktop/React-Portfolio/src/components/Project.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/Project.css';\n\nfunction Project({ projects }) {\n  const { projectId } = useParams();\n  const project = projects.find((project) => project.id === projectId);\n\n  if (!project) {\n    return (\n      <div className=\"project-container\">\n        <h2>Project not found</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"project-container\">\n      <h2>{project.title}</h2>\n      <div className=\"project-links\">\n        <a href={project.deployedUrl}>View Deployed App</a>\n        <a href={project.githubUrl}>View GitHub Repository</a>\n      </div>\n      <div className=\"project-screenshot\">\n        <img src={project.screenshot} alt={project.title} />\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC3B,MAAM;IAAEG;EAAU,CAAC,GAAGP,SAAS,EAAE;EACjC,MAAMQ,OAAO,GAAGF,QAAQ,CAACG,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACE,EAAE,KAAKH,SAAS,CAAC;EAEpE,IAAI,CAACC,OAAO,EAAE;IACZ,oBACEN,OAAA;MAAKS,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCV,OAAA;QAAAU,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAEV;EAEA,oBACEd,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCV,OAAA;MAAAU,QAAA,EAAKJ,OAAO,CAACS;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxBd,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BV,OAAA;QAAGgB,IAAI,EAAEV,OAAO,CAACW,WAAY;QAAAP,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACnDd,OAAA;QAAGgB,IAAI,EAAEV,OAAO,CAACY,SAAU;QAAAR,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD,eACNd,OAAA;MAAKS,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCV,OAAA;QAAKmB,GAAG,EAAEb,OAAO,CAACc,UAAW;QAACC,GAAG,EAAEf,OAAO,CAACS;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACX,EAAA,CAxBQF,OAAO;EAAA,QACQH,SAAS;AAAA;AAAAwB,EAAA,GADxBrB,OAAO;AA0BhB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}